<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
         http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>spring-boot-helloword</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>
<!--    截至2020/6/16，spring boot的最新版本为2.3.1 -->
    <!--    超级父pom 是springboot父依赖-->
    <parent>
        <groupId>com.chige</groupId>
        <artifactId>spring-boot-demo</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test -->


    <dependencies>

<!--        引入一个加密库-->
        <dependency>
            <groupId>com.github.ulisesbocchio</groupId>
            <artifactId>jasypt-spring-boot-starter</artifactId>
            <version>2.1.0</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
        </dependency>


<!--热部署第一步：引入依赖库
    第二步：在settings——》Build——》Compiler中勾选Build project automatically
    第三步：同时按住键盘shift + alt + ctrl + / 这四个键,之后选择Registry，再找到compiler.automake.allow.when.app.running并勾选-->
<!--            <dependency>-->
<!--                <groupId>org.springframework.boot</groupId>-->
<!--                <artifactId>spring-boot-devtools</artifactId>-->
<!--                <scope>runtime</scope>-->
<!--                <optional>true</optional>-->
<!--            </dependency>-->

<!--        用来加载注解驱动的jar包，如在bean对象上引入@Setter或者@Getter-->
        <!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->

        <!--配置处理器-->
<!--        <dependency>-->
<!--            <groupId>org.springframework.boot</groupId>-->
<!--            <artifactId>spring-boot-configuration-processor</artifactId>-->
<!--            <optional>true</optional>-->
<!--        </dependency>-->


    </dependencies>

<!--    springboot项目启动的第二种方式：先引入插件依赖-->
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>
